{"version":3,"sources":["logo.svg","components/TableComponent.js","components/InputFormComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Rows","props","Object","keys","cname","map","obj","ind","className","main_json","times","subject","Table","undefined","time_table","time_period","days","day","TableComponent","this","style","left","position","React","Component","Option","Select","layout","labelCol","span","wrapperCol","formItemLayout","xs","sm","daysList","formItemLayoutWithOutLabel","offset","DynamicFieldSet","List","name","fields","add","remove","field","index","Item","label","required","key","validateTrigger","rules","whitespace","message","noStyle","placeholder","width","length","MinusCircleOutlined","margin","onClick","type","PlusOutlined","InputFormComponent","state","no_sections","no_subjects","percentage","sendData","bind","final_json","requestOptions","method","headers","body","JSON","stringify","progress","interval","setInterval","setState","fetch","then","response","console","log","clearInterval","json","data","initialValues","remember","onFinish","values","time_arr","i","noClass","push","teachers_list","student_groups","noSec","teachers_dict","split","forEach","teacher","names","Set","room_list","Array","no_classes","no_days","noDays","days_list","fi","feq","d_list","j","k","get_days_list","indexOf","startClass","rooms","time_list","subject_list","teacher_list","justify","allowClear","value","onChange","e","htmlType","text","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7dc43f15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './components.css'\nimport {Row,Col} from 'antd'\n\nconst Rows = (props)=>{\n  return(\n    < >\n      {Object.keys(props.cname).map((obj,ind) => <td className= {props.main_json.times[ind]}>{props.cname[props.main_json.times[ind]].subject}</td>)}      \n    </>\n  );\n}\n\n//<Rows cname = {main_json[obj]}/>\nconst Table = (props) =>{ \n  if(props.main_json == undefined){\n    return <div></div>\n  }else{\nreturn (\n<div>\n{Object.keys(props.main_json.time_table).map(obj =>  \n  <table className={obj}>\n    <tr>\n      <td>{obj}</td>\n      {props.main_json.times.map(time_period => <td>{time_period}</td>)}\n    </tr> \n    {props.main_json.days.map(day => \n    <tr>\n      <td>{day}</td> \n    <Rows main_json = {props.main_json} cname = {props.main_json.time_table[obj][day]}/></tr>)}\n  </table>)}\n</div>)}}\n;\n//let m = main_json.map((keys)=>{<div>{keys}</div>})\nclass TableComponent extends React.Component{\n  super(props){\n    this.props = props\n    \n  }\n  render(){\n      return (\n          \n        <div style={{left:\"20%\",position:\"relative\"}}>\n        <Table main_json = {this.props.main_json}/>\n        <br></br>\n        </div>  \n        );\n    }\n}\nexport default TableComponent","import React from 'react';\nimport { InputNumber } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport TableComponent from './TableComponent'\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport { Form,Row,Col,Input, Button,TimePicker, Checkbox,Select} from 'antd';\nconst { Option } = Select;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 8 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 8 },\n};\n\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 8 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 8 },\n    sm: { span: 8 },\n  },\n};\n\nconst secList = ['A','B','C','D','E','F','G','H','I','K']\nconst daysList = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 8, offset: 8 },\n    sm: { span: 8, offset: 8 },\n  },\n};\nconst TeachList = (no_sections)=>{\n  for(var i=0;i<no_sections;i++)\n  {return(\n    <div>\n    haa  \n    </div>\n  )}\n}\nconst DynamicFieldSet = () => {\n  return (\n\n      <Form.List name=\"names\">\n        {(fields, { add, remove }) => {\n          return (\n            <div>\n              {fields.map((field, index) => (\n                <Form.Item\n                  {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                  label={index === 0 ? 'Subject' : ''}\n                  required={false}\n                  key={field.key}\n                >\n                  <Form.Item\n                    {...field}\n                    validateTrigger={['onChange', 'onBlur']}\n                    rules={[\n                      {\n                        required: true,\n                        whitespace: true,\n                        message: \"Enter the Subjects\",\n                      },\n                    ]}\n                    noStyle\n                  >\n\n                  <Input name = 'subject' placeholder=\"subject\"   style={{ width: '60%' }} />\n                  </Form.Item>\n                  {fields.length > 1 ? (\n                    <MinusCircleOutlined\n                      className=\"dynamic-delete-button\"\n                      style={{ margin: '0 8px' }}\n                      onClick={() => {\n                        remove(field.name);\n                      }}\n                    />\n                  ) : null}\n                </Form.Item>\n              ))}\n              <Form.Item {...formItemLayoutWithOutLabel}>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => {\n                    add();\n                  }}\n                  \n                >\n                  <PlusOutlined /> Add Subjects\n                </Button>\n              </Form.Item>\n            </div>\n          );\n        }}  \n      </Form.List>\n  );\n};\n\nconst config = {\n  rules: [\n    {\n      type: 'object',\n      required: true,\n      message: 'Please select time!',\n    },\n  ],\n};\nclass InputFormComponent extends React.Component{\n  constructor(props){\n    super(props)\n    this.state={\n      main_json:undefined,\n      no_sections:0,\n      no_subjects:0,\n      percentage:0\n    }\n    this.sendData = this.sendData.bind(this)\n  }\n\n  sendData(final_json){\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(final_json)\n        };\n        let progress = 0\n        let updateProgress = ()=>{\n            this.setState({percentage:progress})\n            progress +=2\n        }\n        let interval = setInterval(updateProgress, 1000)\n        fetch('/generate', requestOptions)\n          .then(response => {\n            console.log(response)\n            clearInterval(interval);\n            this.setState({percentage: 100})\n            return response.json()})\n          .then(data => this.setState({ main_json: data , percentage: 100}));\n    }\n\n    render(){\n        return(\n          <div>\n            <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n    onFinish ={(values)=>{\n      let time_arr = []\n      for(let i=1;i<=values.noClass;i++){\n        time_arr.push(i)\n      }\n      var teachers_list=[]\n      var student_groups=[]\n      for(var i=0;i<values.noSec;i++){\n        var teachers_dict={}\n        console.log(values[\"Teachers\"+i])\n        \n        teachers_list.push(...values[\"Teachers\"+i].split(','))\n        values[\"Teachers\"+i].split(',').forEach((teacher,ind)=>{\n          teachers_dict[values.names[ind]] = teacher\n        })\n        teachers_dict[\"enpty\"] = \"-\"\n        student_groups.push(teachers_dict)\n      }\n      teachers_list = [...new Set(teachers_list)]\n      var room_list = [...Array(values.noSec).keys()]\n      //console.log(teachers_list)\n      //console.log(student_groups)\n      //console.log(room_list)\n      function get_days_list(fi,feq){\n        let d_list = []\n        for(let j = 0,k=fi;j<feq;j++,k++){\n          if(k<7)\n            d_list.push(daysList[k])\n          else\n          d_list.push(daysList[k-7])\n        }\n        return d_list\n      }\n    //console.log(daysList.indexOf(values.startClass))\n      let final_json = {\n      no_classes : values.noClass,\n      no_days : values.noDays,\n      days_list: get_days_list(daysList.indexOf(values.startClass),values.noDays),\n      rooms:room_list,\n      time_list: time_arr,\n      subject_list:values.names,\n      teacher_list:teachers_list,\n      student_groups:student_groups\n    }\n\n\n    let dummyJSON = {\n        no_classes: 3,\n        no_days: 6,\n        days_list: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n        rooms: ['400', '401'],\n        time_list: ['9:00', '10:00', '11:00', '12:00', '13:00', '14:00'],\n        subject_list: ['Physics', 'Chemistry', 'Biology', 'Math', 'English', 'Computers'],\n        teacher_list: ['T1', 'T2', 'T3', 'T4', 'T5', 'T6'],\n        student_groups: [{'Physics': 'T1', 'Chemistry': 'T2', 'Biology': 'T3', 'Math': 'T4', 'English': 'T5',\n                          'Computers': 'T6', 'empty': '-'},\n                         {'Physics': 'T1', 'Chemistry': 'T2', 'Biology': 'T3', 'Math': 'T4', 'English': 'T5',\n                         'Computers': 'T6', 'empty': '-'}]\n    }\n    console.log(final_json)\n\n\n    this.sendData(final_json)\n\n  }\n\n\n  }\n    >\n        \n      <Row justify=\"center\">\n        <Col span={6} >\n          <Form.Item name = \"noDays\"  label=\"No of Days\">\n            <InputNumber />\n          </Form.Item> \n        </Col>\n        <Col span={6}>\n          <Form.Item\n          name=\"startClass\"\n          label=\"Start Day\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}>\n          <Select\n          style={{ width: '100%'}}\n            placeholder=\"Select a Day\"\n            //onChange={onGenderChange}\n            allowClear\n          >\n            <Option value=\"Sunday\">Sunday</Option>\n            <Option value=\"Monday\">Monday</Option>\n            <Option value=\"Tuesday\">Tuesday</Option>\n            <Option value=\"Wednesday\">Wednesday</Option>\n            <Option value=\"Thursday\">Thursday</Option>\n            <Option value=\"Friday\">Friday</Option>\n            <Option value=\"Saturday\">Saturday</Option>\n          </Select>\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row justify=\"center\">\n        <Col span={6}>\n          <Form.Item name =\"noSec\" label=\"No of Sections\">\n              <InputNumber onChange={(value)=>{this.setState({no_sections:value})}} />\n          </Form.Item>\n        </Col>\n        <Col span={6}>\n          <Form.Item name=\"noClass\" label=\"No of Classes/week:\">\n              <InputNumber />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row>\n      \n      \n      <Col  offset={8} span = {8}>\n      <DynamicFieldSet />\n      </Col>\n      \n      </Row>\n    {[...Array(this.state.no_sections)].map((e, i) =>\n    <Row key={i} justify=\"center\">\n    <Col >\n      <Form.Item name={\"Teachers\"+i} label={\"Enter the names of teachers of \"+ i+ \" section seprated by comma(,)\"}>\n    <Input placeholder=\"The names should be in the same order as the subjects entered\"></Input>\n    </Form.Item>\n    </Col>\n    </Row>\n    )}\n    <Row justify=\"center\">\n      <Col span={1}>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Col>\n      </Row>\n          \n        </Form>\n        <div style={{'width': '5%', 'margin': 'auto'}}>\n            <CircularProgressbar value={this.state.percentage} text={`${this.state.percentage}%`}/>\n        </div>\n        <br/>\n        <TableComponent main_json = {this.state.main_json}/>\n      </div>\n        );\n    }\n}\n\nexport default InputFormComponent","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport main_json from './robots'\nimport TableComponent from './components/TableComponent'\nimport InputFormComponent from './components/InputFormComponent'\nfunction App() {\n  return (\n    <div className=\"App\">    \n    <br></br>\n    <InputFormComponent/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}